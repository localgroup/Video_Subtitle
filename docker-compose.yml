

# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: >
#       sh -c "python manage.py collectstatic --noinput &&
#              python manage.py migrate &&
#              python manage.py runserver 0.0.0.0:8000"
#     volumes:
#       - .:/app
#       - media_volume:/app/media
#       - ccextractor_volume:/usr/local/bin/CCExtractor
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#       - redis
#     env_file:
#       - .env

#   db:
#     image: postgres:16
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"

#   celery:
#     build: .
#     command: celery -A process_video worker --loglevel=info
#     volumes:
#       - media_volume:/app/media
#       - ccextractor_volume:/usr/local/bin/CCExtractor
#     depends_on:
#       - web
#       - redis
#     environment:
#       - CELERY_BROKER_URL=redis://redis:6379/0
#       - CELERY_RESULT_BACKEND=redis://redis:6379/0

# volumes:
#   postgres_data:
#   media_volume:
#   ccextractor_volume:




services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A process_video worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
    depends_on:
      - web
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data:
  media_volume:
